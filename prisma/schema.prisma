// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}


enum UserRole {
  SUPERADMIN
  ADMIN
}

model Admin {  
    id        String   @id @default(auto()) @map("_id") @db.ObjectId  
    email     String   @unique  
    name      String
    password  String
    role      UserRole @default(ADMIN)
    createdAt DateTime @default(now())  
    updatedAt DateTime @updatedAt
    
    @@map("admins")
}

model SocialProfile {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  slug      String   @unique
  value     String
  active    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("social_profiles")
}

model OrganisationDetails {
  id                     String   @id @default(auto()) @map("_id") @db.ObjectId
  singletonKey           String   @unique @default("singleton")
  address                String   @default("")
  emails                 String[] @default([])
  phones                 String[] @default([])
  locationMapUrl         String   @default("")
  companyTagline         String   @default("")
  vision  String         @default("")
  mission String         @default("")
  createdAt              DateTime @default(now())
  updatedAt              DateTime @updatedAt

  @@map("organisation_details")
}

model HomepageSection {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  sectionKey  String   @unique  // e.g., "hero", "about", "features", etc.
  data        Json     // Completely flexible JSON structure for each section
  active      Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("homepage_sections")
}

model ContactSection {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  sectionKey  String   @unique  // e.g., "contactInfo", "contactForm", "map", etc.
  data        Json     // Completely flexible JSON structure for each section
  active      Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("contact_sections")
}

model ContactFormSubmission {
  id              String    @id @default(auto()) @map("_id") @db.ObjectId
  firstName       String
  lastName        String
  email           String
  contactNumber   String
  personType      String    // From "I am a" dropdown
  interestedIn    String    // From "I am interested in" dropdown
  message         String?
  fileUrl         String?   // URL to uploaded file (image or PDF)
  links           String?   // Any links pasted by the user
  isRead          Boolean   @default(false)
  isDeleted       Boolean   @default(false)
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt

  @@map("contact_form_submissions")
}

model NewsletterSubscription {
    id          String   @id @default(auto()) @map("_id") @db.ObjectId
  email       String   @unique
  isActive    Boolean  @default(true)
  subscribedAt DateTime @default(now())
  unsubscribedAt DateTime?
  source      String?  // Optional: track where the subscription came from
  
  @@map("newsletter_subscriptions")
}

model LatestUpdate {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  image     String
  category  String
  title     String
  btnTitle  String
  link      String
  active    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("latest_updates")
}

model Category {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String   @unique
  slug        String   @unique
  description String?
  active      Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  videos      Video[]  @relation(fields: [videoIds], references: [id])
  videoIds    String[] @db.ObjectId

  @@map("categories")
}

model Video {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  image       String
  title       String
  subtitle    String?
  description String
  link        String
  date        DateTime
  active      Boolean    @default(true)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  categories  Category[] @relation(fields: [categoryIds], references: [id])
  categoryIds String[]   @db.ObjectId

  @@map("videos")
}

model Sector {
  id          String           @id @default(auto()) @map("_id") @db.ObjectId
  name        String           @unique
  slug        String           @unique
  description String?
  active      Boolean          @default(true)
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
  papers      ResearchPaper[]  @relation(fields: [paperIds], references: [id])
  paperIds    String[]         @db.ObjectId
  blogs       Blog[]           @relation(fields: [blogIds], references: [id])
  blogIds     String[]         @db.ObjectId

  @@map("sectors")
}

model ResearchPaper {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  image       String
  title       String?
  description String
  link        String
  date        DateTime?
  active      Boolean    @default(true)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  sectors     Sector[]   @relation(fields: [sectorIds], references: [id])
  sectorIds   String[]   @db.ObjectId

  @@map("research_papers")
}

model Conversation {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  image       String
  videoLink   String
  name        String
  title       String
  desc        String
  date        String
  active      Boolean    @default(true)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt

  @@map("conversations")
}

model Blog {
  id              String     @id @default(auto()) @map("_id") @db.ObjectId
  title           String?
  subtitle        String?
  authorName      String?
  authorDesignation String?
  publishedDate   DateTime?
  docFile         String?    // URL to the PDF file
  coverImage      String?    // URL to the cover image
  content         String?    // Markdown content
  active          Boolean    @default(true)
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
  sectors         Sector[]   @relation(fields: [sectorIds], references: [id])
  sectorIds       String[]   @db.ObjectId

  @@map("blogs")
}

model Newsletter {
  id              String     @id @default(auto()) @map("_id") @db.ObjectId
  title           String
  subtitle        String?
  version         String     // e.g., "Vol. 1, Issue 2"
  publishedDate   DateTime
  coverImage      String     // URL to the cover image
  fileUrl         String     // URL to the PDF file
  active          Boolean    @default(true)
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt

  @@map("newsletters")
}

model ArchiveTab {
  id              String     @id @default(auto()) @map("_id") @db.ObjectId
  name            String     // Display name of the tab
  slug            String     @unique // URL-friendly identifier
  description     String?    // Optional description of the tab content
  order           Int        // Order in which tabs should be displayed
  active          Boolean    @default(true)
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
  galleryItems    GalleryItem[] // Relation to gallery items

  @@map("archive_tabs")
}

model GalleryItem {
  id              String     @id @default(auto()) @map("_id") @db.ObjectId
  image           String     // URL to the image file
  event           String     // Name of the event
  year            Int        // Year of the event
  description     String     // Description of the image
  tabId           String     @db.ObjectId // Reference to the archive tab
  tab             ArchiveTab @relation(fields: [tabId], references: [id])
  active          Boolean    @default(true)
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt

  @@map("gallery_items")
}

model MediaCoverage {
  id              String     @id @default(auto()) @map("_id") @db.ObjectId
  title           String     // Title of the media coverage
  subtitle        String?    // Optional subtitle
  authorName      String     // Name of the author or publication
  date            String     // Date of publication (as string for flexibility)
  coverImage      String     // URL to the cover image
  publicationYear Int        // Year of publication for filtering
  active          Boolean    @default(true)
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt

  @@map("media_coverage")
}

model Advisor {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  image       String     // URL to the advisor's image
  title       String     // Name of the advisor
  desig       String     // Designation of the advisor
  popupImg    String?    // Optional popup image URL
  popupdesc   String     // Description for the popup
  link        String?    // Optional social media or website link
  socialMedia String?    // Optional social media platform name
  active      Boolean    @default(true)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt

  @@map("advisors")
}

model Fellow {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  image       String     // URL to the fellow's image
  title       String     // Name of the fellow
  desig       String     // Designation of the fellow
  subtitle    String     // Fellow subtitle (e.g., "Distinguished Fellow (Power)")
  popupImg    String?    // Optional popup image URL
  popupdesc   String     // Description for the popup
  link        String?    // Optional social media or website link
  socialMedia String?    // Optional social media platform name
  active      Boolean    @default(true)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt

  @@map("fellows")
}

model Patron {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  image       String     // URL to the patron's image
  title       String     // Name of the patron
  desig       String     // Designation of the patron
  popupImg    String?    // Optional popup image URL
  popupdesc   String     // Description for the popup
  link        String?    // Optional social media or website link
  socialMedia String?    // Optional social media platform name
  order       Int        @default(0) // Order for sorting patrons
  active      Boolean    @default(true)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt

  @@map("patrons")
}

model Team {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  image       String     // URL to the team member's image
  title       String     // Name of the team member
  desig       String     // Designation of the team member
  popupImg    String?    // Optional popup image URL
  popupdesc   String     // Description for the popup
  link        String?    // Optional social media or website link
  socialMedia String?    // Optional social media platform name
  order       Int        @default(0) // Order for sorting team members
  active      Boolean    @default(true)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt

  @@map("team")
}

model Trustee {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  image       String     // URL to the trustee's image
  title       String     // Name of the trustee
  desig       String     // Designation of the trustee
  popupImg    String?    // Optional popup image URL
  popupdesc   String     // Description for the popup
  link        String?    // Optional social media or website link
  socialMedia String?    // Optional social media platform name
  order       Int        @default(0) // Order for sorting trustees
  active      Boolean    @default(true)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt

  @@map("trustees")
}

model Association {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  title       String     // Name of the association
  imageUrl    String     // URL to the association's logo/image
  order       Int        @default(0) // Order for sorting associations
  active      Boolean    @default(true)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt

  @@map("homepage_associations")
}

model Engagement {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  title       String     // Title of the engagement/event
  description String     // Description of the engagement/event
  date        DateTime   // Date of the engagement/event
  location    String     // Location of the engagement/event
  tag         String     // Type tag (e.g., "Conference", "Workshop")
  subtitle    String?    // Optional subtitle or markdown content
  reportUrl   String?    // Optional URL to a report PDF
  covers      Json?      // Optional array of cover images with descriptions
  active      Boolean    @default(true)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt

  @@map("engagements")
}